!function(n){function o(r){if(e[r])return e[r].exports;var t=e[r]={exports:{},id:r,loaded:!1};return n[r].call(t.exports,t,t.exports,o),t.loaded=!0,t.exports}var e={};return o.m=n,o.c=e,o.p="",o(0)}([function(n,o,e){"use strict";function r(n){return n&&n.__esModule?n:{"default":n}}var t=e(1),i=r(t);!function(){function n(){return{restrict:"AE",scope:{options:"=queryBuilder"},template:'<div query-builder-group="options" group="options._query.group"></div>',link:function(n){function o(n){for(var e={},r=[],t=0;t<n.rules.length;t++)if(e[n.operator.value]=r,n.rules[t].group)r.push(o(n.rules[t].group));else{var i={};i[n.rules[t].field.name]={},i[n.rules[t].field.name][n.rules[t].condition.value]=n.rules[t].data,r.push(i)}for(var u in e)break;return u&&e[u].length<2&&(e=e[u].pop()),e}var e={operators:[{name:"AND",value:"$and"},{name:"OR",value:"$or"}],conditions:[{name:"equal",value:"$eq"},{name:"is not equal",value:"$neq"},{name:"less than",value:"$lt"},{name:"less than or equal",value:"$lte"},{name:"greater than",value:"$gt"},{name:"greater than or equal",value:"$gte"}]};n.options=angular.extend({},e,n.options),n.options._query={group:{operator:n.options.operators[0],rules:[]}},n.format=o,n.$watch("options._query",function(o){n.options.query=n.format(o.group)},!0)}}}function o(n){"ngInject";return{restrict:"AE",scope:{group:"=",options:"=queryBuilderGroup"},templateUrl:i["default"],compile:function(o,e){var r,t=o.contents().remove();return function(o,e,i){function u(){o.group.rules.push({condition:o.options.conditions[0],field:o.options.fields[0],data:""})}function s(n){o.group.rules.splice(n,1)}function l(){o.group.rules.push({group:{operator:o.options.operators[0],rules:[]}})}function a(){"group"in o.$parent&&o.$parent.group.rules.splice(o.$parent.$index,1)}o.addCondition=u,o.removeCondition=s,o.addGroup=l,o.removeGroup=a,r||(r=n(t)),r(o,function(n){e.append(n)})}}}}o.$inject=["$compile"],angular.module("ngQueryBuilder",[]).directive("queryBuilder",n).directive("queryBuilderGroup",o)}()},function(n,o){var e="/src/query-builder-group-directive.html",r='<div class="alert alert-info"> <div class=form-inline> <select ng-options="o.name for o in options.operators" ng-model=group.operator class="form-control input-sm"></select> <button ng-click=addCondition() class="btn btn-sm btn-success"><span class="glyphicon glyphicon-plus-sign"></span> Add Condition</button> <button ng-click=addGroup() class="btn btn-sm btn-success"><span class="glyphicon glyphicon-plus-sign"></span> Add Group</button> <button ng-click=removeGroup() class="btn btn-sm btn-danger"><span class="glyphicon glyphicon-minus-sign"></span> Remove Group</button> </div> <div class=query-builder-group> <div ng-repeat="rule in group.rules | orderBy:\'index\'" class=query-builder-condition> <div ng-switch="rule.hasOwnProperty(\'group\')"> <div ng-switch-when=true> <div query-builder-group=options group=rule.group></div> </div> <div ng-switch-default> <div class=form-inline> <select ng-options="f.name for f in options.fields" ng-model=rule.field class="form-control input-sm"></select> <select ng-options="c.name for c in options.conditions" ng-model=rule.condition class="form-control input-sm"></select> <input type=text ng-model=rule.data class="form-control input-sm"/> <button ng-click=removeCondition($index) class="btn btn-sm btn-danger"><span class="glyphicon glyphicon-minus-sign"></span></button> </div> </div> </div> </div> </div> </div>';window.angular.module("ng").run(["$templateCache",function(n){n.put(e,r)}]),n.exports=e}]);
//# sourceMappingURL=angular-query-builder.js.map